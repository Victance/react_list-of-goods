{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","App","state","isStarted","NONE","changeState","setState","changeReverse","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeF,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SApCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAuCE,IAAMe,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXZ,YAAY,EACZD,SAAUJ,EAASkB,MAJvB,EAOEC,YAAc,WACZ,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBC,WAAYD,EAAMC,eATxB,EAaEI,cAAgB,WACd,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBX,YAAaW,EAAMX,gBAfzB,EAmBEiB,MAAQ,WACN,EAAKF,SAAS,CAAEf,YAAY,EAAOD,SAAUJ,EAASkB,QApB1D,EAuBEd,SAAW,SAACA,GACV,EAAKgB,SAAS,CAAEhB,cAxBpB,4CA2BE,WAAU,IAAD,OACP,EAA4CmB,KAAKP,MAAzCC,EAAR,EAAQA,UAAWb,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,WAE7B,OACE,qBAAKmB,UAAU,MAAf,SAEIP,EAEI,qCACE,wBACEQ,KAAK,SACLC,QAAS,kBACP,EAAKtB,SAASJ,EAASU,UAH3B,iCAQA,wBACEe,KAAK,SACLC,QAAS,kBACP,EAAKtB,SAASJ,EAASY,SAH3B,4BAQA,wBAAQa,KAAK,SAASC,QAASH,KAAKF,cAApC,qBAIA,wBACEI,KAAK,SACLC,QAASH,KAAKD,MAFhB,mBAOA,oBAAIE,UAAU,QAAd,SACGtB,EAAkBD,EAAiBG,EAAUC,GAC3CsB,KAAI,SAAAC,GAAI,OACP,oBAAIJ,UAAU,cAAd,SACGI,GAD8BA,WAQzC,wBACEH,KAAK,SACLC,QAASH,KAAKJ,YAFhB,yBA1Ed,GAAyBU,IAAMC,WCrD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3b33fe3c.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  changeState = () => {\n    this.setState(state => ({\n      isStarted: !state.isStarted,\n    }));\n  };\n\n  changeReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  sortType = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  render() {\n    const { isStarted, sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"App\">\n        {\n          isStarted\n            ? (\n              <>\n                <button\n                  type=\"button\"\n                  onClick={() => (\n                    this.sortType(SortType.ALPABET))}\n                >\n                  Sort alphabetically\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={() => (\n                    this.sortType(SortType.LENGTH))}\n                >\n                  Sort by length\n                </button>\n\n                <button type=\"button\" onClick={this.changeReverse}>\n                  Reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n\n                <ul className=\"Goods\">\n                  {getReorderedGoods(goodsFromServer, sortType, isReversed)\n                    .map(good => (\n                      <li className=\"Goods__item\" key={good}>\n                        {good}\n                      </li>\n                    ))}\n                </ul>\n              </>\n            )\n            : (\n              <button\n                type=\"button\"\n                onClick={this.changeState}\n              >\n                Start\n              </button>\n            )\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}